---
title: "project1"
format: html
editor: visual
author: Will Garneau
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE} 
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

```{r, echo=FALSE}
#| eval: false
install.packages("tidyverse")
install.packages("here")
install.packages("tidytuesdayR")
install.packages("janitor")
install.packages("esquisse")
install.packages("skimr")
install.packages("tab")
install.packages('knitr', dependencies = TRUE)
```

```{r, echo=FALSE}
library(here)
library(tidyverse)
library(tidytuesdayR)
library(readr)
library(esquisse)
library(skimr)
library(janitor)
library(tab)
library(knitr)
library(ggplot2)
```

#Default code -- not using because it will max out API

```{r}
tuesdata <- tidytuesdayR::tt_load("2022-01-18") 
```

```{r}
chocolate<- tuesdata$chocolate
```

```{r}
if (!dir.exists(here("data"))) {
    dir.create(here("data"))
}
```

```{r}
# saves data only once (not each time you knit a R Markdown)
if (!file.exists(here("data", "chocolate.RDS"))) {
    url_csv <- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-18/chocolate.csv"
    chocolate <- readr::read_csv(url_csv)
    
    # save the file to RDS objects
    saveRDS(chocolate, file = here("data", "chocolate.RDS"))
}
```

```{r}
chocolate <- readRDS(here("data", "chocolate.RDS"))
as_tibble(chocolate)
```

#1 Make a histogram of the rating scores to visualize the overall distribution of scores. Change the number of bins from the default to 10, 15, 20, and 25. Pick on the one that you think looks the best. Explain what the difference is when you change the number of bins and explain why you picked the one you did.

```{r}
#| eval: false
esquisser(chocolate)
```

```{r}
ggplot(chocolate) +
  aes(x = rating) +
  geom_histogram(bins = 25L, fill = "#112446") +
  theme_minimal()
```

#2 Consider the countries where the beans originated from. How many reviews come from each country of bean origin?

```{r}
origin<-select(chocolate, country_of_bean_origin,rating) 
```

```{r}
chocolate.o <- group_by(origin,country_of_bean_origin)
```

```{r}
chocolate.o %>% group_by(country_of_bean_origin) %>% count()
```

#3 What is average rating scores from reviews of chocolate bars that have Ecuador as country_of_bean_origin in this dataset? For this same set of reviews, also calculate (1) the total number of reviews and (2) the standard deviation of the rating scores. Your answer should be a new data frame with these three summary statistics in three columns. Label the name of these columns mean, sd, and total.

```{r}
rating<-select(chocolate, country_of_bean_origin,rating)
```

```{r}
rating.ecuador <- filter(rating, country_of_bean_origin == "Ecuador")
```

```{r}
count(rating.ecuador)
```

```{r}
mean(rating.ecuador$rating)
```

```{r}
sd(rating.ecuador$rating)
```

```{r}
summary.ecuador<-tibble(
  total = count(rating.ecuador),
  mean = mean(rating.ecuador$rating),
  sd = sd(rating.ecuador$rating)
  
)
```

```{r}
print(summary.ecuador)
```


#Which country makes the best chocolate (or has the highest ratings on average) with beans from Ecuador?

```{r}
company.reviews<-select(chocolate, company_location,country_of_bean_origin,rating)
```

```{r}
company.ecuador<-filter(company.reviews, country_of_bean_origin == "Ecuador")
```


```{r}
location<-group_by(company.ecuador, company_location)
```

```{r}
summary<-summarize(location,
          mean = mean(rating, na.rm= TRUE),
          location = company_location,
          origin = country_of_bean_origin)
```


```{r}
summary %>% arrange(desc(mean))
```

#Calculate the average rating across all country of origins for beans. Which top 3 countries have the highest ratings on average?


```{r}
origin %>%
  group_by(country_of_bean_origin) %>%
    summarize(mean = mean(rating, na.rm= TRUE))%>% 
  arrange(desc(mean))
```


#Following up on the previous problem, now remove any countries of bean origins that have less than 10 chocolate bar reviews. Now, which top 3 countries have the highest ratings on average?
```{r}
more_reviews<-chocolate %>%
  group_by(country_of_bean_origin) %>%
  count(rating) %>%
  filter(n>10)
```

```{r}
more_reviews %>%
  group_by(country_of_bean_origin) %>%
    summarize(mean = mean(rating, na.rm= TRUE)) %>% 
  arrange(desc(mean))
```

#For this last part, let’s explore the relationship between percent chocolate and ratings.


#Identify the countries of bean origin with at least 50 reviews. Remove reviews from countries are not in this list.

```{r}
more_than_50<-group_by(chocolate, country_of_bean_origin) %>%
  count(country_of_bean_origin)%>%
  filter(n>=50)
```

#Using the variable describing the chocolate percentage for each review, create a new column that groups chocolate percentages into one of four groups: (i) <60%, (ii) >=60 to <70%, (iii) >=70 to <90%, and (iii) >=90% (Hint check out the substr() function in base R and the case_when() function from dplyr – see example below).

```{r}
by_percent<-chocolate %>% filter(country_of_bean_origin %in% c("Belize","Blend","Bolivia","Brazil","Colombia","Dominican Republic", "Ecuador","Guatemala","Madagascar","Mexico","Nicaragua","Papua New Guinea","Peru","Tanzania","Venezuela","Vietnam"))%>%
  mutate(percent_choc = case_when(
        cocoa_percent >= 90 ~ ">=90%",
        cocoa_percent >= 70 & cocoa_percent <90 ~ ">=70 to <90%",
        cocoa_percent >= 60 & cocoa_percent <70 ~ ">=60 to <70%",
        cocoa_percent < 60 ~ "<60%" 
        
    ))
```

#Using the new column described in #2, re-order the factor levels (if needed) to be starting with the smallest percentage group and increasing to the largest percentage group (Hint check out the fct_relevel() function from forcats).

```{r}
by_percent$percent_choc <- factor(by_percent$percent_choc, 
                                  levels = c("<60%", ">=60 to <70%", ">=70 to <90%", ">=90%"))
```

#For each country, make a set of four side-by-side boxplots plotting the groups on the x-axis and the ratings on the y-axis. These plots should be faceted by country.

```{r}
ggplot(by_percent) +
 aes(x = percent_choc, y = rating) +
 geom_col(fill = "#112446") +
 theme_minimal() +
 facet_wrap(vars(country_of_bean_origin))
(by_percent)
```

#On average, which category of chocolate percentage is most highly rated? Do these countries mostly agree or are there disagreements?

There is universally high ratings for chocolate with cocoa percent >=70 to <90%.


#Part 2: Join two datasets together

The goal of this part of the assignment is to join two datasets together. gapminder is a R package that contains an excerpt from the Gapminder data.

#Use this dataset it to create a new column called continent in our chocolate dataset that contains the continent name for each review where the country of bean origin is.
```{r}
install.packages("gapminder")
```

```{r}
library(gapminder)
```

```{r}
view(gapminder)
```


```{r}
gapminder<-gapminder
```

```{r}
more_than_10<-group_by(chocolate, country_of_bean_origin) %>%
  count(country_of_bean_origin)%>%
  filter(n>=10)
```


chocolate %>% filter(country_of_bean_origin %in% c("Belize","Blend","Bolivia","Brazil","Colombia","Dominican Republic", "Ecuador","Guatemala","Madagascar","Mexico","Nicaragua","Papua New Guinea","Peru","Tanzania","Venezuela","Vietnam"))%>%

```{r}
merged<-left_join(more_than_10, gapminder, by=c('country_of_bean_origin' = 'country'))
```


#Only keep reviews that have reviews from countries of bean origin with at least 10 reviews.

#Also, remove the country of bean origin named "Blend".

#Make a set of violin plots with ratings on the y-axis and continents on the x-axis.

#Hint:Check to see if there are any NAs in the new column. If there are any NAs, add the continent name for each row.
